"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[32],{868:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/dcae_vs_jpeg-439bc86132b5e19fd6d59b9fca7af769.png"},2143:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/ae_compression-31e85ed62cb28a4004209261483107ae.png"},5588:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=t(4848),a=t(8453);const i={sidebar_label:"PathAE - Pathology image compression with autoencoders"},r="Pathology Image Compression with Pre-trained Autoencoders",o={id:"projects/pathae",title:"Pathology Image Compression with Pre-trained Autoencoders",description:"Preprint",source:"@site/docs/projects/pathae.md",sourceDirName:"projects",slug:"/projects/pathae",permalink:"/docs/projects/pathae",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"PathAE - Pathology image compression with autoencoders"},sidebar:"projectsSidebar",next:{title:"ZoomLDM - Multi-scale diffusion model",permalink:"/docs/projects/zoomldm"}},c={},d=[{value:"TL;DR",id:"tldr",level:2},{value:"Using compressed images in downstream tasks",id:"using-compressed-images-in-downstream-tasks",level:2},{value:"Citation",id:"citation",level:2}];function l(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"pathology-image-compression-with-pre-trained-autoencoders",children:"Pathology Image Compression with Pre-trained Autoencoders"}),"\n",(0,n.jsx)("div",{class:"container mt-5",children:(0,n.jsx)("div",{class:"card bg-light",children:(0,n.jsxs)("div",{class:"card-body justify-content-center",children:[(0,n.jsx)("h2",{class:"card-title text-center",children:"Preprint"}),(0,n.jsxs)("h3",{class:"card-text text-center",children:["Srikar Yellapragada",(0,n.jsx)("sup",{children:"1"}),", Alexandros Graikos",(0,n.jsx)("sup",{children:"1"}),", Kostas Triaridis",(0,n.jsx)("sup",{children:"1"}),",",(0,n.jsx)(s.br,{}),"\n","Zilinghan Li",(0,n.jsx)("sup",{children:"2"}),", Tarak Nath Nandi",(0,n.jsx)("sup",{children:"2,3"}),", Ravi K Madduri",(0,n.jsx)("sup",{children:"2,3"}),",",(0,n.jsx)(s.br,{}),"\n","Prateek Prasanna",(0,n.jsx)("sup",{children:"1"}),", Joel Saltz",(0,n.jsx)("sup",{children:"1"}),", Dimitris Samaras",(0,n.jsx)("sup",{children:"1"})]}),(0,n.jsxs)("h3",{class:"card-text text-center",children:[(0,n.jsx)("sup",{children:"1"}),"Stony Brook University, ",(0,n.jsx)("sup",{children:"2"}),"Argonne National Laboratory, ",(0,n.jsx)("sup",{children:"3"}),"University of Chicago"]}),(0,n.jsxs)("div",{class:"d-flex justify-content-center",children:[(0,n.jsxs)("a",{href:"https://arxiv.org/abs/2503.11591",target:"_blank",children:[(0,n.jsx)("button",{class:"paper_button",children:"arXiv"})," "]}),(0,n.jsxs)("a",{href:"https://huggingface.co/collections/StonyBrook-CVLab/pathology-fine-tuned-aes-67d45f223a659ff2e3402dd0",target:"_blank",children:[(0,n.jsx)("button",{class:"paper_button",children:"\ud83e\udd17 Models"})," "]})]})]})})}),"\n",(0,n.jsx)(s.h2,{id:"tldr",children:"TL;DR"}),"\n",(0,n.jsxs)(s.p,{children:["Large volumes of high-resolution digital histopathology whole-slide images are essential in developing large-scale machine learning models. However, storage, transmission, and computational efficiency are significant challenges that need to be overcome in order to efficiently utilize these vast repositories. We find that ",(0,n.jsx)(s.strong,{children:"existing autoencoders are better pathology image compressors than JPEG"})," and propose to use them to reduce the costs of storing large whole-slide image repositories."]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"ae_compression",src:t(2143).A+"",width:"1827",height:"701"})}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.p,{children:["Furthermore, in cases where the AEs fail to preserve fine-grained phenotypic details, we show that ",(0,n.jsx)(s.strong,{children:"fine-tuning only the decoder"})," of existing AE models with a pathology-specific perceptual metric increases the quality of the reconstructions significantly."]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"dcae_vs_jpeg",src:t(868).A+"",width:"1696",height:"869"})}),"\n",(0,n.jsx)(s.h2,{id:"using-compressed-images-in-downstream-tasks",children:"Using compressed images in downstream tasks"}),"\n",(0,n.jsx)(s.p,{children:"We systematically benchmark three autoencoders with varying compression levels on segmentation, patch classificationand and multiple instance learning by replacing the original images with their autoencoder reconstructions. Using AE-compressed images leads to minimal performance degradation. Employing a K-means clustering-based quantization method for the autoencoder latents, we reduce storage requirements by as much as 8x."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"downstream",src:t(6965).A+"",width:"2904",height:"850"})}),"\n",(0,n.jsx)("div",{class:"container justify-content-center text-center",children:(0,n.jsx)("img",{src:"/img/pathae/ae_similarity.png",alt:"similarity",width:"70%"})}),"\n",(0,n.jsx)(s.h2,{id:"citation",children:"Citation"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bibtex",children:"@article{yellapragada2025pathology,\n  title={Pathology Image Compression with Pre-trained Autoencoders}, \n  author={Srikar Yellapragada and Alexandros Graikos and Kostas Triaridis and Zilinghan Li and Tarak Nath Nandi and Ravi K Madduri and Prateek Prasanna and Joel Saltz and Dimitris Samaras},\n  journal={arXiv preprint arXiv:2503.11591},\n  year={2025},\n}\n"})})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},6965:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/ae_downstream-ac09685c8c33e6a9197ef37cfce49f79.png"},8453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>o});var n=t(6540);const a={},i=n.createContext(a);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);